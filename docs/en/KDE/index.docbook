<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book
  PUBLIC "-//KDE//DTD DocBook XML V4.5-Based Variant V1.1//EN" "dtd/kdedbx45.dtd">
<book><bookinfo><title>Xsldbg '4.8.0' Command and usage documentation</title><authorgroup><author><firstname>Keith</firstname><surname>Isdale</surname><affiliation><address><email>keithisdale@gmail.com</email></address></affiliation></author></authorgroup><copyright><year>2002-</year><holder>Keith Isdale</holder></copyright><date>2018-09-10</date><releaseinfo>'4.8.0'</releaseinfo><abstract><para>xsldbg is a tool intended to help understand stylesheets.
            What makes it different to other stylesheet debuggers is the ability
            to search for items of interest and trace stylesheet execution.
        </para><para>A good deal of effort has been put into
            <itemizedlist><listitem><para>creating a <ulink url="http://www.xemacs.org/">XEmacs</ulink> front end called
                            <ulink url="https://sourceforge.net/projects/xsldbg/files/xsldbg-mode/">xsldbg-mode</ulink>.</para></listitem><listitem><para>creating a Qt5 front end  called
                            <ulink url="https://sourceforge.net/projects/xsldbg/files/qxsldbg/">qxsldbg</ulink>.</para></listitem><listitem><para>creating a kate plugin(KF5/Qt5) called
                            <ulink url="https://sourceforge.net/projects/xsldbg/files/kxsldbg/">kxsldbg</ulink>.</para></listitem></itemizedlist></para></abstract><keywordset><keyword>debugger</keyword><keyword>XSL</keyword></keywordset></bookinfo><chapter id="overview_chapter"><title>Overview</title><section id="description_summary">
<title>xsldbg Description</title>
<para>xsldbg is a text based tool to debug stylesheets (the eXtensible Stylesheet Language) and has
    commands similar to the Unix/Linux debugger gdb. It has three major modes of execution of stylesheets.</para>
<itemizedlist><listitem><para>Run the whole stylesheet</para></listitem><listitem><para>Step to next xsl instruction</para></listitem><listitem><para>Continue until next break point is found, or stylesheet has restarted</para></listitem></itemizedlist>
</section><section id="commandline_summary">
<title>xsldbg command line</title>
<para>On systems with readline library available you can</para>
<itemizedlist><listitem><para>use the back/forward keys to navigate the history of entered commands</para></listitem><listitem><para>use &lt;tab&gt; key to automatically complete values names such as file names when adding breakpoints</para></listitem></itemizedlist>
<para>On all systems the last entered command can be repeated by just pressing
the &lt;ENTER&gt; key.
</para>
<para/>
<para>
If your operating system supports it file names will be expanded.
</para>
<para>
Note that the libxml2 library used support the following path types for XSLT/XML documents
</para>
<itemizedlist><listitem><para>&lt;SomePath&gt;</para></listitem><listitem><para>file://&lt;SomePath&gt;</para></listitem><listitem><para>http://&lt;SomePath&gt;</para></listitem><listitem><para>ftp://[user[:password]@]host[:port]/path</para></listitem></itemizedlist>
<para>
Normally support for http:// and ftp:// XML document paths enabled in libxml2. When specifier http:// or ftp:// document paths ensure that host maps to IPv4 or IPv6 address used by related server. For
  example instead of localhost you may need to use the IPv4 address 127.0.0.1
</para>
<para>Several commands take more that one argument. Some arguments can be
 surrounded by quotes to complex argument to be proceesed as one
  argument. eg break "* | @" would allow you to use a breakpoint on the
  template with the name "* | @"</para>
</section><section id="legend_summary">
<title>Legend</title>
<para>The following shows the legend of terms use in this manual and there meaning</para>
<itemizedlist><listitem><para>TEMPLATE_NAME : A valid template name contains only ASCI character codes 0x00 to 0x7F. And can be a fully qualified name ie "xsl:templateName". </para></listitem><listitem><para>FILENAME : A valid file name local to the system of the user. It can have a "~" prefix on *nix and CYGWIN platforms. Or environment variables under RISC OS</para></listitem><listitem><para>URI : A Uniform Resource Identifiers as defined by RFC 2396</para></listitem><listitem><para>MODE_NAME The mode of template which can be fully qualified name ie "xsl:modeName".</para></listitem><listitem><para>QNAME : A fully qualified name ie "xsl:localPart"</para></listitem><listitem><para>LINENO : A valid line number in associated &lt;FILENAME&gt;</para></listitem><listitem><para>NUMBER_OF_FRAMES : A valid line number frames to change position by</para></listitem><listitem><para>BREAKPOINT_ID : A valid break point number</para></listitem><listitem><para>WATCH_ID : A valid watch expression number as indicated by showwatch command</para></listitem><listitem><para>SPEED: speed to walk through code at, between 0 to 9</para></listitem><listitem><para><emphasis>(Comment)</emphasis>: a comment about command meaning or usage</para></listitem><listitem><para>{ opt1 | opt2 | opt2 .. etc} : Choose one of the opt's</para></listitem><listitem><para>XPATH : a xpath selection of node(s)</para></listitem><listitem><para>PARAM_ID : a valid parameter number as indicated by showparam command</para></listitem><listitem><para>PATH : A path to change working directory to On some operating systems a "~" prefix will be replaced by your home directory path</para></listitem><listitem><para>TEXT : Free form text <emphasis>(no restrictions)</emphasis></para></listitem><listitem><para>COMMAND : A valid command for the xsldbg</para></listitem><listitem><para>QNAME : A valid variable/parameter name</para></listitem><listitem><para>SOURCE : The stylesheet being/to be executed. See &lt;FILENAME&gt; and &lt;URI&gt;</para></listitem><listitem><para>DATA : The XML data(document) being/to be processed by the stylesheet. See &lt;FILENAME&gt; and &lt;URI&gt;</para></listitem><listitem><para>DEVICE_PATH : Is a valid terminal on the operating system</para></listitem><listitem><para>TTY_LEVEL : Is a valid level of input/output to use</para></listitem></itemizedlist>
</section><section id="command_summary">
<title>Within xsldbg these commands are available:</title>
<itemizedlist><listitem><para>Help related :<link linkend="help_cmd" endterm="help_cmd.title">help</link></para></listitem><listitem><para>Running related : {<link linkend="bye_cmd" endterm="bye_cmd.title">bye</link>|<link linkend="exit_cmd" endterm="exit_cmd.title">exit</link>|
<link linkend="quit_cmd" endterm="quit_cmd.title">quit</link>}, <link linkend="step_cmd" endterm="step_cmd.title">step</link>,
<link linkend="stepup_cmd" endterm="stepup_cmd.title">stepup</link>, <link linkend="stepdown_cmd" endterm="stepdown_cmd.title">stepdown</link>,
<link linkend="next_cmd" endterm="next_cmd.title">next</link>,
<link linkend="continue_cmd" endterm="continue_cmd.title">continue</link>, <link linkend="run_cmd" endterm="run_cmd.title">run</link>,
<link linkend="trace_cmd" endterm="trace_cmd.title">trace</link>, <link linkend="setoption_cmd" endterm="setoption_cmd.title">setoption</link>,
<link linkend="options_cmd" endterm="options_cmd.title">options</link></para></listitem><listitem><para>Libxslt parameter related : <link linkend="addparam_cmd" endterm="addparam_cmd.title">addparam</link>,
<link linkend="delparam_cmd" endterm="delparam_cmd.title">delparam</link>,<link linkend="showparam_cmd" endterm="showparam_cmd.title">showparam</link>,
<link linkend="output_cmd" endterm="output_cmd.title">output</link>, <link linkend="setoption_cmd" endterm="setoption_cmd.title">setoption</link>,
<link linkend="options_cmd" endterm="options_cmd.title">options</link></para></listitem><listitem><para>Template related : <link linkend="templates_cmd" endterm="templates_cmd.title">templates</link>,
<link linkend="where_cmd" endterm="where_cmd.title">where</link>, <link linkend="frame_cmd" endterm="frame_cmd.title">frame</link></para></listitem><listitem><para>Break point related : <link linkend="break_cmd" endterm="break_cmd.title">break</link>,
<link linkend="showbreak_cmd" endterm="showbreak_cmd.title">showbreak</link>,<link linkend="delete_cmd" endterm="delete_cmd.title">delete</link>,
<link linkend="enable_cmd" endterm="enable_cmd.title">enable</link></para></listitem><listitem><para>Expression viewing(xpath) : <link linkend="cat_cmd" endterm="cat_cmd.title">cat</link></para></listitem><listitem><para>Node viewing : <link linkend="ls_cmd" endterm="ls_cmd.title">ls</link>, <link linkend="dir_cmd" endterm="dir_cmd.title">dir</link>,
        <link linkend="du_cmd" endterm="du_cmd.title">du</link>, <link linkend="cat_cmd" endterm="cat_cmd.title">cat</link>, <link linkend="pwd_cmd" endterm="pwd_cmd.title">pwd</link>, <link linkend="addwatch_cmd" endterm="addwatch_cmd.title">addwatch</link>, <link linkend="showwatch_cmd" endterm="showwatch_cmd.title">showwatch</link>, <link linkend="delwatch_cmd" endterm="delwatch_cmd.title">delwatch</link></para></listitem><listitem><para>Variable viewing : <link linkend="globals_cmd" endterm="globals_cmd.title">globals</link>,
<link linkend="locals_cmd" endterm="locals_cmd.title">locals</link>,
<link linkend="cat_cmd" endterm="cat_cmd.title">cat</link></para></listitem><listitem><para>Variable setting: <link linkend="set_cmd" endterm="set_cmd.title">set</link></para></listitem><listitem><para>Node selection : <link linkend="source_cmd" endterm="source_cmd.title">source</link>,
<link linkend="data_cmd" endterm="data_cmd.title">data</link>, <link linkend="cd_cmd" endterm="cd_cmd.title">cd</link></para></listitem><listitem><para>Searching :<link linkend="search_cmd" endterm="search_cmd.title">search</link></para></listitem><listitem><para>Operating system related :<link linkend="chdir_cmd" endterm="chdir_cmd.title">chdir</link>,
<link linkend="shell_cmd" endterm="shell_cmd.title">shell</link>,<link linkend="tty_cmd" endterm="tty_cmd.title">tty</link></para></listitem><listitem><para>File related : <link linkend="list_cmd" endterm="list_cmd.title">list</link>,<link linkend="output_cmd" endterm="output_cmd.title">output</link>,
<link linkend="entities_cmd" endterm="entities_cmd.title">entities</link>, <link linkend="system_cmd" endterm="system_cmd.title">system</link>,
<link linkend="public_cmd" endterm="public_cmd.title">public</link></para></listitem><listitem><para>Disabled file commands: <link linkend="validate_cmd" endterm="validate_cmd.title">validate</link>,
<link linkend="load_cmd" endterm="load_cmd.title">load</link>, <link linkend="save_cmd" endterm="save_cmd.title">save</link>,
<link linkend="write_cmd" endterm="write_cmd.title">write</link>, <link linkend="free_cmd" endterm="free_cmd.title">free</link></para></listitem></itemizedlist>
</section></chapter><chapter id="command_chapter"><title>Command summary</title><para>For overview of the available commands see:
          <link linkend="command_summary">xsldbg command overview</link></para><section id="addparam_cmd"><title id="addparam_cmd.title">Addparam</title>
<para>Add a libxslt parameter</para>
<para>Usage</para><itemizedlist><listitem><para>addparam &lt;QNAME&gt; &lt;XPATH&gt;<emphasis>(The &lt;XPATH&gt; must not contain any spaces nor double quotation marks.No error checking done on the validity of &lt;QNAME&gt; nor &lt;XPATH&gt;. This is equivalent to providing --param &lt;QNAME&gt; &lt;XPATH&gt; via command line.)</emphasis></para></listitem><listitem><para>add param &lt;QNAME&gt; "&lt;XPATH&gt;"<emphasis>(Must not contain double quotation marks in &lt;XPATH&gt;)</emphasis></para></listitem></itemizedlist>
</section><section id="addwatch_cmd"><title id="addwatch_cmd.title">Addwatch</title>
<para>Add an expression to be watched. See showwatch for display watch values</para>

<para>Shortcut name: watch</para>

<para>Usage</para><itemizedlist><listitem><para>addwatch &lt;XPATH&gt;</para></listitem></itemizedlist>
</section><section id="base_cmd"><title id="base_cmd.title">Base</title>
<para>Print the base for this node</para>
<para>Usage</para><itemizedlist><listitem><para>base</para></listitem></itemizedlist>
</section><section id="break_cmd"><title id="break_cmd.title">Break</title>
<para>Break at a template, at a location in a stylesheet or XML file loaded by xsldbg, or at the current node.
New for xsldbg 3.1.4: When in gdb compatabilty mode orpaned breakpoints can be set at a specific file and line number and be resolved to an active later on.</para>

<para>Shortcut name: b</para>
<para>xsldbg will try to guess the complete URL given a</para>
<itemizedlist><listitem><para>file name without a path specified.</para></listitem><listitem><para>a file name in the same directory as the "top" stylesheet loaded</para></listitem><listitem><para>a file name relative to the current working directory of xsldbg</para></listitem></itemizedlist>
<para>As example if you have loaded a stylesheet file of ../en/xsldoc.xsl you can do this:break -l xsldoc.xsl 26</para>
<para>This command will match a partial or complete QNAME template and or mode name provided. Eg "template" will match any QNAME with a local part of "template"
</para>
<para>Any name spaces in the provided QNAME will be expanded as specified
by the names spaces defined in the XSL SOURCE file. eg "xsl:test1"  will be expanded to "http://www.w3.org/199/XSL/Transform:test1"
</para>
<para>A requested breakpoint may need to be resolved to its associated URL and line number. This is done automaticly after
the first template has been seen by xsldbg. Breakpoints are re-validated shortly after the start of each run.
</para>
<para>Automatic breakpoint validation is used when gdb mode is enabled - the default behavior of xsldbg</para>

<para>Usage</para><itemizedlist><listitem><para>break -l &lt;FILENAME&gt; &lt;LINENO&gt;<emphasis>(To set breakpoint at specified file, line number)</emphasis></para></listitem><listitem><para>break -l &lt;URI&gt; &lt;LINENO&gt;<emphasis>(To set breakpoint at specified URI, line number)</emphasis></para></listitem><listitem><para>break &lt;TEMPLATE_NAME&gt;<emphasis>(To break at named or matched template.)</emphasis></para></listitem><listitem><para>break &lt;TEMPLATE_NAME&gt; &lt;MODE_NAME&gt;<emphasis>(To break at named template with given mode.)</emphasis></para></listitem><listitem><para>break "" &lt;MODE_NAME&gt;<emphasis>(To break at any template that has a given mode name)</emphasis></para></listitem><listitem><para>break *<emphasis>(To break at any template found.)</emphasis></para></listitem><listitem><para>break \*<emphasis>(To break at the "*" template. Other name that include '*' will not be treated specially.)</emphasis></para></listitem><listitem><para>break <emphasis>(To break point at current node. Yes that includes XML data nodes!)</emphasis></para></listitem></itemizedlist>
</section><section id="bye_cmd"><title id="bye_cmd.title">Bye</title>
<para>Exit processing stylesheet as soon as possible.</para>
<para>Usage</para><itemizedlist><listitem><para>bye</para></listitem></itemizedlist>
</section><section id="cat_cmd"><title id="cat_cmd.title">Cat</title>
<para>Print the result of a xpath expression on relative current node.</para>
<para>Usage</para><itemizedlist><listitem><para>Usage : cat &lt;XPATH&gt;<emphasis>(To view a variable or parameter)</emphasis></para></listitem><listitem><para>Usage : cat $&lt;QNAME&gt;</para></listitem></itemizedlist>
</section><section id="cd_cmd"><title id="cd_cmd.title">Cd</title>
<para>Change to the path specified by a xpath.</para>
<para>Usage</para><itemizedlist><listitem><para>cd &lt;XPATH&gt;</para></listitem><listitem><para>cd -t &lt;TEMPLATE_NAME&gt;<emphasis>(To changes current SOURCE node to a be xsl template with name &lt;NAME&gt;, but does execute source command)</emphasis></para></listitem><listitem><para>cd -s &lt;XPATH&gt;<emphasis>(An absolute xPath to node within stylesheet)</emphasis></para></listitem><listitem><para>cd   &lt;SHORTCUT&gt; &lt;XPATH&gt;</para></listitem><listitem><para>     Where SHORTCUT can be either</para></listitem><listitem><para><itemizedlist><listitem><para>&lt;&lt;         = preceding-sibling::node()</para></listitem><listitem><para>&gt;&gt;         = following-sibling::node()</para></listitem><listitem><para>&lt;-         = ancestor::node()</para></listitem><listitem><para>-&gt;         = decendant::node()</para></listitem></itemizedlist></para></listitem></itemizedlist>
</section><section id="chdir_cmd"><title id="chdir_cmd.title">Chdir</title>
<para>Change the working directory</para>
<para>Usage</para><itemizedlist><listitem><para>chdir &lt;PATH&gt;<emphasis>(A relative or absolute path for operating system)</emphasis></para></listitem></itemizedlist>
</section><section id="continue_cmd"><title id="continue_cmd.title">Continue</title>
<para>Continue running stylesheet, stopping at any break points found.</para>

<para>Shortcut name: c</para>

<para>Usage</para><itemizedlist><listitem><para>continue</para></listitem></itemizedlist>
</section><section id="data_cmd"><title id="data_cmd.title">Data</title>
<para>Switch to displaying the current node in XML data. Or change XML data used</para>
<para>Usage</para><itemizedlist><listitem><para>data<emphasis>(Switch to the current document node.)</emphasis></para></listitem><listitem><para>data &lt;DATA&gt;<emphasis>(To change to a new XML data file.  A leading "~" is replaced by the $HOME environment variable value. Will need to use "run" command to process it)</emphasis></para></listitem></itemizedlist>
</section><section id="delete_cmd"><title id="delete_cmd.title">Delete</title>
<para>Delete a template breakpoint</para>

<para>Shortcut name: d</para>

<para>Usage</para><itemizedlist><listitem><para>delete<emphasis>(To delete breakpoint at current node)</emphasis></para></listitem><listitem><para>delete   &lt;BREAKPOINT_ID&gt;<emphasis>(To delete breakpoint at specified break point number)</emphasis></para></listitem><listitem><para>delete -l &lt;FILENAME&gt; &lt;LINENO&gt;<emphasis>(Delete at specified file, line number)</emphasis></para></listitem><listitem><para>delete -l &lt;URI&gt; &lt;LINENO&gt;<emphasis>(Delete at specified URI, line number)</emphasis></para></listitem><listitem><para>delete &lt;TEMMPLATENAME&gt;<emphasis>(To delete break point at named template.)</emphasis></para></listitem><listitem><para>delete *<emphasis>(To delete all break points.)</emphasis></para></listitem></itemizedlist>
</section><section id="delparam_cmd"><title id="delparam_cmd.title">Delparam</title>
<para>Delete a libxslt parameter</para>
<para>Usage</para><itemizedlist><listitem><para>delparam<emphasis>(Delete all parameters present)</emphasis></para></listitem><listitem><para>delparam &lt;PARAM_ID&gt;</para></listitem></itemizedlist>
</section><section id="delwatch_cmd"><title id="delwatch_cmd.title">Delwatch</title>
<para>Delete a watch expression or remove all watch expressions as displayed by "showwatch." command</para>
<para>Usage</para><itemizedlist><listitem><para>delwatch &lt;WATCHID&gt;<emphasis>(Delete a watch expression with given ID)</emphasis></para></listitem><listitem><para>delwatch *<emphasis>(Delete all watch expressions)</emphasis></para></listitem></itemizedlist>
</section><section id="dir_cmd"><title id="dir_cmd.title">Dir</title>
<para>Print list of nodes in a similary way to the dir shell command.</para>

<para/>

<para>Usage</para><itemizedlist><listitem><para>dir</para></listitem></itemizedlist>
</section><section id="disable_cmd"><title id="disable_cmd.title">Disable</title>
<para>Disable a breakpoint</para>
<para>Usage</para><itemizedlist><listitem><para>disable<emphasis>(To disable breakpoint at current node)</emphasis></para></listitem><listitem><para>disable   &lt;BREAKPOINT_ID&gt;<emphasis>(To disable breakpoint at specified break point number</emphasis></para></listitem><listitem><para>disable -l &lt;FILENAME&gt; &lt;LINENO&gt;<emphasis>(Disable breakpoint at specified file, line number)</emphasis></para></listitem><listitem><para>disable -l &lt;URI&gt; &lt;LINENO&gt;<emphasis>(Disable breakpoint at specified URI, line number)</emphasis></para></listitem></itemizedlist>
</section><section id="du_cmd"><title id="du_cmd.title">Du</title>
<para>Print a summary of child nodes in a tree format.</para>
<para>Usage</para><itemizedlist><listitem><para>du</para></listitem></itemizedlist>
</section><section id="dump_cmd"><title id="dump_cmd.title">Dump</title>
<para>Dump the gory details of this node</para>
<para>Usage</para><itemizedlist><listitem><para>dump</para></listitem></itemizedlist>
</section><section id="enable_cmd"><title id="enable_cmd.title">Enable</title>
<para>Enable or disable a breakpoint (Toggle enable/disable/)</para>

<para>Shortcut name: e</para>

<para>Usage</para><itemizedlist><listitem><para>enable<emphasis>(To enable/disable breakpoint at current node)</emphasis></para></listitem><listitem><para>enable   &lt;BREAKPOINT_ID&gt;<emphasis>(To enable/disable breakpoint at specified break point number</emphasis></para></listitem><listitem><para>enable -l &lt;FILENAME&gt; &lt;LINENO&gt;<emphasis>(Enable/disable breakpoint at specified file, line number)</emphasis></para></listitem><listitem><para>enable -l &lt;URI&gt; &lt;LINENO&gt;<emphasis>(Enable/disable breakpoint at specified URI, line number)</emphasis></para></listitem></itemizedlist>
</section><section id="entities_cmd"><title id="entities_cmd.title">Entities</title>
<para>Print list of external General Parsed entities used data file (document)</para>
<para>Usage</para><itemizedlist><listitem><para>entities</para></listitem><listitem><para>entities -r<emphasis>(Also print fully resolved URI for General Parsed entities)</emphasis></para></listitem></itemizedlist>

<para>Shortcut name : ent</para>

</section><section id="exit_cmd"><title id="exit_cmd.title">Exit</title>
<para>Exit processing stylesheet as soon as possible.</para>
<para>Usage</para><itemizedlist><listitem><para>exit</para></listitem></itemizedlist>
</section><section id="frame_cmd"><title id="frame_cmd.title">Frame</title>
<para>Print the stack frame at a given depth</para>

<para>Shortcut name: f</para>

<para>Usage</para><itemizedlist><listitem><para>frame &lt;FRAME_DEPTH&gt;<emphasis>(Depth is a number from 0 to the current depth of call stack)</emphasis></para></listitem></itemizedlist>
</section><section id="free_cmd"><title id="free_cmd.title">Free</title>
<para>Free stylesheet and data        (Disabled see run)</para>
<para>Usage</para><itemizedlist><listitem><para>free</para></listitem></itemizedlist>
</section><section id="globals_cmd"><title id="globals_cmd.title">Globals</title>
<para>Print a list of global stylesheet variables or parameters. Print the value of a global variable</para>
<para>Usage</para><itemizedlist><listitem><para>globals<emphasis>(Print list of all globally available variables)</emphasis></para></listitem><listitem><para>globals -f<emphasis>(Print list of all globally available variables and their values)</emphasis></para></listitem><listitem><para>globals &lt;QNAME&gt;<emphasis>(Print the value of variable specified)</emphasis></para></listitem></itemizedlist>
</section><section id="help_cmd"><title id="help_cmd.title">Help</title>
<para>Display help on command or overview</para>

<para>Shortcut name: h</para>

<para>Usage</para><itemizedlist><listitem><para>help   <emphasis>(Show overview of product)</emphasis></para></listitem><listitem><para>help &lt;COMMAND&gt; <emphasis>(Show help about a command)</emphasis></para></listitem></itemizedlist>
</section><section id="list_cmd"><title id="list_cmd.title">List XSL/XML source file</title>
<para>List the text in local XSL/XML source file in current output encoding</para>
<para>Usage</para><itemizedlist><listitem><para>list<emphasis>List the next 10 lines in current file</emphasis></para></listitem><listitem><para>list &lt;startLine&gt;<emphasis>List the file content starting from line &lt;startLine&gt;</emphasis></para></listitem><listitem><para>list &lt;startLine&gt; &lt;endLine&gt;<emphasis>List the file content starting from line &lt;startLine&gt; to &lt;startLine&gt;</emphasis></para></listitem></itemizedlist>
</section><section id="load_cmd"><title id="load_cmd.title">Load</title>
<para>Load the xsldbg's options and user preferences from disk</para>
<para>Usage</para><itemizedlist><listitem><para>load</para></listitem></itemizedlist>
</section><section id="locals_cmd"><title id="locals_cmd.title">Locals</title>
<para>Print a list of local stylesheet variables or parameters. Print the value of a local variable</para>
<para>Usage</para><itemizedlist><listitem><para>locals<emphasis>(Print list of all locally available variables)</emphasis></para></listitem><listitem><para>locals -f<emphasis>(Print list of all locally available variables and their values)</emphasis></para></listitem><listitem><para>locals &lt;QNAME&gt;<emphasis>(Print the value of variable specified)</emphasis></para></listitem></itemizedlist>
</section><section id="ls_cmd"><title id="ls_cmd.title">Ls</title>
<para>List nodes in a brief format</para>
<para>Usage</para><itemizedlist><listitem><para>ls</para></listitem></itemizedlist>
</section><section id="next_cmd"><title id="next_cmd.title">Next</title>
<para>Skip over an xsl:call-template or xsl:apply-templates.
This command has the same effect of entering the commands "step" and then "up"</para>

<para>Shortcut name: n</para>

<para>Usage</para><itemizedlist><listitem><para>next<emphasis>(proceed to next sibling instruction)</emphasis></para></listitem></itemizedlist>
</section><section id="options_cmd"><title id="options_cmd.title">Options</title>
<para>Print the values for xsldbg's option</para>
<para>Usage</para><itemizedlist><listitem><para>options</para></listitem></itemizedlist>
</section><section id="output_cmd"><title id="output_cmd.title">Output</title>
<para>Specify the output file name</para>

<para>Shortcut name : o</para>

<para>Usage</para><itemizedlist><listitem><para>output &lt;FILENAME&gt;<emphasis>(A local file name. Which can have a "~" prefix on *nix and CYGWIN platforms. Or environment variables under RISC OS)</emphasis></para></listitem><listitem><para>output &lt;URI&gt;<emphasis>(The &lt;URI&gt; must only use the "file:///" protocol. This is then converted to a file name suitable for the operating system)</emphasis></para></listitem><listitem><para>output -<emphasis>( Send to standard output. Must only be used when using xsldbg's command line prompt )</emphasis></para></listitem></itemizedlist>
</section><section id="public_cmd"><title id="public_cmd.title">Public</title>
<para>Print the value that a public ID maps via the current catalog</para>

<para>Shortcut name : pub</para>

<para>Usage</para><itemizedlist><listitem><para>public "&lt;PublicID&gt;"</para></listitem></itemizedlist>
</section><section id="pwd_cmd"><title id="pwd_cmd.title">Pwd</title>
<para>Print the current working directory.</para>
<para>Usage</para><itemizedlist><listitem><para>pwd</para></listitem></itemizedlist>
</section><section id="quit_cmd"><title id="quit_cmd.title">Quit</title>
<para>Exit processing stylesheet as soon as possible.</para>

<para>Shortcut name: q</para>

<para>Usage</para><itemizedlist><listitem><para>quit</para></listitem></itemizedlist>
</section><section id="run_cmd"><title id="run_cmd.title">Run</title>
<para>Restart the stylesheet.</para>

<para>Shortcut name: r</para>

<para>Usage</para><itemizedlist><listitem><para>run</para></listitem></itemizedlist>
</section><section id="save_cmd"><title id="save_cmd.title">Save</title>
<para>Save the xsldbg's options and user preferences to disk</para>
<para>Usage</para><itemizedlist><listitem><para>save</para></listitem></itemizedlist>
</section><section id="search_cmd"><title id="search_cmd.title">Search</title>
<para>Search a dataBase of all information gathered from stylesheets loaded</para>

<para>All output files are stored in, value of the "searchresultspath" option if set, or the same directory as the provided stylesheet. searchresults.xml is normally transformed by  search.xsl, but will be transformed using searchhtml.xsl if the "preferhtml" option is set.
</para>
<para>When the search command is issued a XML file (searchresults.xml) will be created. You can then process this file with your own stylesheet to present data in a other ways. If "preferhtml" option is not set
then searchresult.txt is printed to display.
</para>
<para>Depending on the amount of data collected it might take a while to complete this command.
</para>

<para>Usage</para><itemizedlist><listitem><para>search &lt;XPATH&gt;<emphasis>(See what xpath can be used see search.dtd in documentation install path such as /usr/share/doc/packages/qt5/xsldbg/en/ .  An example &lt;XPATH&gt; is '//search/variable' , the default &lt;XPATH&gt; is '//search/*' )</emphasis></para></listitem><listitem><para>search -sort &lt;XPATH&gt;<emphasis>(Tell search.xsl to sort the result before saving it)</emphasis></para></listitem><listitem><para>Examples of &lt;XPATH&gt; values are:</para></listitem><listitem><para>//search/*</para></listitem><listitem><para>//search/breakpoint</para></listitem><listitem><para>//search/breakpoint/[contains(@url,'foo')]</para></listitem><listitem><para>//search/callstack</para></listitem><listitem><para>//search/callstack/[contains(@template,'foo')]</para></listitem><listitem><para>//search/callstack/[contains(@url,'foo')]</para></listitem><listitem><para>//search/import</para></listitem><listitem><para>//search/import/[contains(@url,'foo')]</para></listitem><listitem><para>//search/include</para></listitem><listitem><para>//search/include/[contains(@url,'foo')]</para></listitem><listitem><para>//search/include/[contains(@href,'foo')]</para></listitem><listitem><para>//search/source</para></listitem><listitem><para>//search/source/[contains(@href, 'foo')]</para></listitem><listitem><para>//search/variable</para></listitem><listitem><para>//search/variable/[contains(@name,'a')]</para></listitem><listitem><para>//search/variable/[contains(@templname,'a')]</para></listitem><listitem><para>//search/variable/[contains(@url,'a')]</para></listitem><listitem><para>//search/template</para></listitem><listitem><para>//search/template/[contains(@url,'foo')]</para></listitem><listitem><para>//search/template/[contains(@match,'foo')]</para></listitem></itemizedlist>
</section><section id="set_cmd"><title id="set_cmd.title">Set</title>
<para>Set the value of an already defined XSLT variable</para>
<para>Usage</para><itemizedlist><listitem><para>set &lt;VARIABLE_NAME&gt; &lt;XPATH&gt;</para></listitem><listitem><para>See also the following commands:<link linkend="globals_cmd" endterm="globals_cmd.title">globals</link>,<link linkend="locals_cmd" endterm="locals_cmd.title">locals</link></para></listitem></itemizedlist>
</section><section id="setoption_cmd"><title id="setoption_cmd.title">Setoption</title>
<para>Set an option for execution of stylesheet</para>

<para>*Note* The 'run' command must be used to apply and make new setting active</para>

<para>Usage</para><itemizedlist><listitem><para>Integer Options</para></listitem><listitem><para>===============</para></listitem><listitem><para>setoption &lt;OPTION_NAME&gt;  &lt;INTEGER_VALUE&gt;</para></listitem><listitem><para>Where &lt;INTEGER_VALUE&gt; is *true* if it is *NOT* equal to zero</para></listitem><listitem><para>Where &lt;INTEGER_VALUE&gt; is *false* if it *IS* equal to zero</para></listitem><listitem><para>  Where integer &lt;OPTION_NAME&gt; can be either</para></listitem><listitem><para><itemizedlist><listitem><para>debug<emphasis>(If &lt;INTEGER_VALUE&gt; is true dump the tree of the result instead)</emphasis></para></listitem><listitem><para>catalogs<emphasis>(If &lt;INTEGER_VALUE&gt; is true use the catalogs from $SGML_CATALOG_FILES or SGML$CatalogFiles for risc operating system</emphasis></para></listitem><listitem><para>html<emphasis>(If &lt;INTEGER_VALUE&gt; is true the input document is an HTML file)</emphasis></para></listitem><listitem><para>docbook<emphasis>(If &lt;INTEGER_VALUE&gt; is true the input document is SGML docbook)</emphasis></para></listitem><listitem><para>xinclude<emphasis>(If &lt;INTEGER_VALUE&gt; is true do XInclude processing on document input)</emphasis></para></listitem><listitem><para>preferhtml<emphasis>(If &lt;INTEGER_VALUE&gt; is true the prefer html output for search results. : See search command)</emphasis></para></listitem><listitem><para>autoencode<emphasis>(Try to use the encoding from the stylesheet)</emphasis></para></listitem><listitem><para>utf8input<emphasis>(All input from user is in UTF-8.This is normaly used when xsldbg is running as a thread)</emphasis></para></listitem><listitem><para>gdb<emphasis>(Run in gdb compatibility mode)</emphasis><itemizedlist><listitem><para>For a value of 1 this means
                    <itemizedlist><listitem><para>Print lots more messages. Increase the frequency of printing "Breakpoint at ..."</para></listitem><listitem><para>At most GDB_LINES_TO_PRINT lines will be printed when evaluating expressions, followed by a "...". See options.h to change this value, the default is three lines of text</para></listitem><listitem><para>Both local and globals will be printed when the "locals" command is issued </para></listitem><listitem><para>When printing expressions with cat/print. The evaluated value will be prefixed by "= "  &lt; EXPRESSION &gt;</para></listitem></itemizedlist></para></listitem></itemizedlist></para></listitem><listitem><para>nonet<emphasis>(If &lt;INTEGER_VALUE&gt; is true refuse to fetch DTDs or entities over network)</emphasis></para></listitem><listitem><para>novalid<emphasis>(If &lt;INTEGER_VALUE&gt; is true skip the DTD loading phase)</emphasis></para></listitem><listitem><para>repeat<emphasis>(If &lt;INTEGER_VALUE&gt; is true run the transformation 20 times)</emphasis></para></listitem><listitem><para>profile<emphasis>(If &lt;INTEGER_VALUE&gt; is true  dump profiling informations)</emphasis></para></listitem><listitem><para>timing<emphasis>(If &lt;INTEGER_VALUE&gt; is true display the time used)</emphasis></para></listitem><listitem><para>noout<emphasis>(If &lt;INTEGER_VALUE&gt; is true do not dump the result)</emphasis></para></listitem></itemizedlist></para></listitem><listitem><para>stdout<emphasis>(Print all error messages to stdout. Normally error messages go to stderr.)</emphasis></para></listitem><listitem><para>setoption &lt;OPTION_NAME&gt; "&lt;STRING_VALUE&gt;"<emphasis>(Must not contain double quotation marks in &lt;STRING_VALUE&gt;)</emphasis></para></listitem><listitem><para>String Options</para></listitem><listitem><para>===============</para></listitem><listitem><para>setoption &lt;OPTION_NAME&gt; &lt;STRING_VALUE&gt;<emphasis>(Must not contain any spaces, nor double quotation marks in &lt;STRING_VALUE&gt;)</emphasis></para></listitem><listitem><para>  Where string &lt;OPTION_NAME&gt; can be either</para></listitem><listitem><para><itemizedlist><listitem><para>data<emphasis>(Data file's URI)</emphasis></para></listitem><listitem><para>source<emphasis>(Source file's URI)</emphasis></para></listitem><listitem><para>output<emphasis>(Output file's SystemID )</emphasis></para></listitem><listitem><para>docspath<emphasis>(Path to use when looking for documentation)</emphasis></para></listitem><listitem><para>catalognames<emphasis>(The names of the catalogs to use when the catalogs option is set. Value will be lost if set before setting catalogs option)</emphasis></para></listitem><listitem><para>encoding<emphasis>(What encoding to use for standard output, see also '--autoencode' command line argument)</emphasis></para></listitem><listitem><para>searchresultspath<emphasis>(What path is to be used when storing the results of searching. If this is not set then xsldbg will use the path of the stylesheet)</emphasis></para></listitem></itemizedlist></para></listitem></itemizedlist>
</section><section id="shell_cmd"><title id="shell_cmd.title">Shell</title>
<para>Execute shell command</para>
<para>Usage</para><itemizedlist><listitem><para>shell &lt;TEXT&gt;<emphasis>(&lt;TEXT&gt; is the text to be passed to operating system for execution)</emphasis></para></listitem></itemizedlist>
</section><section id="showbreak_cmd"><title id="showbreak_cmd.title">Showbreak</title>
<para>To display list of template break points.</para>

<para>Shortcut name: show</para>
<para>If a mode exists on a template breakpoint then it will
      be appended to the end of template name for breakpoint. An example of the output is :
<itemizedlist><listitem><para> Breakpoint 1 enabled for template: "*" mode : "" in file "test1.xsl" at line 101</para></listitem><listitem><para> Breakpoint 2 enabled for template: "*" mode : "testMode" in file "test1.xsl" at line 105</para></listitem><listitem><para> Breakpoint 3 enabled for template: "*" mode : "http://www.w3.org/1999/XSL/Transform:testMode" in file "test1.xsl" at line 105</para></listitem><listitem><para/></listitem><listitem><para>  Total of 3 breakpoints present</para></listitem></itemizedlist></para>

<para>Usage</para><itemizedlist><listitem><para>showbreak</para></listitem></itemizedlist>
</section><section id="showparam_cmd"><title id="showparam_cmd.title">Showparam</title>
<para>Print the libxslt parameters present</para>
<para>Usage</para><itemizedlist><listitem><para>showparam</para></listitem></itemizedlist>
</section><section id="showwatch_cmd"><title id="showwatch_cmd.title">Showwatch</title>
<para>Show the current expression being watched</para>

<para>Shortcut name: watches</para>

<para>Usage</para><itemizedlist><listitem><para>showwatch<emphasis>(Show the currently selected watches and their values)</emphasis></para></listitem><listitem><para>showwatch 1<emphasis>(Enable the automatic printing of watch expressions. This is used by default.)</emphasis></para></listitem><listitem><para>showwatch 0<emphasis>(Disable the automatic printing of watch expressions.)</emphasis></para></listitem></itemizedlist>
</section><section id="source_cmd"><title id="source_cmd.title">Source</title>
<para>Switch to displaying the current node in stylesheet. Or change stylesheet used</para>
<para>Usage</para><itemizedlist><listitem><para>source<emphasis>(Switch to the current node in stylesheet.)</emphasis></para></listitem><listitem><para>source &lt;SOURCE&gt;<emphasis>(To change to a new source file.  A leading "~" is replaced by the $HOME environment variable value. Will need to use "run" command to execute it)</emphasis></para></listitem></itemizedlist>
</section><section id="step_cmd"><title id="step_cmd.title">Step</title>
<para>Step until next stylesheet instruction.</para>

<para>Shortcut name: s</para>

<para>Usage</para><itemizedlist><listitem><para>step</para></listitem></itemizedlist>
</section><section id="stepdown_cmd"><title id="stepdown_cmd.title">Stepdown</title>
<para>Step down to a newer "call frame".  </para>

<para>Shortcut name: down</para>

<para>Usage</para><itemizedlist><listitem><para>stepdown <emphasis>(step down one frame)</emphasis></para></listitem><listitem><para>stepdown &lt;NUMBER_OF_FRAMES&gt;<emphasis>(step down specified number of frames)</emphasis></para></listitem></itemizedlist>
</section><section id="stepup_cmd"><title id="stepup_cmd.title">Stepup</title>
<para>Step up to a older "call frame".  </para>

<para>Shortcut name: up</para>
<para>This is not an accurate command, xsldbg will stop as close as it can. </para>

<para>Usage</para><itemizedlist><listitem><para>stepup <emphasis>(step up one frame)</emphasis></para></listitem><listitem><para>stepup &lt;NUMBER_OF_FRAMES&gt; <emphasis>(step up specified number of frames)</emphasis></para></listitem></itemizedlist>
</section><section id="stylesheets_cmd"><title id="stylesheets_cmd.title">Stylesheets</title>
<para>Print out a list of stylesheets loaded</para>

<para>Shortcut name: style</para>

<para>Usage</para><itemizedlist><listitem><para>stylesheets</para></listitem></itemizedlist>
</section><section id="system_cmd"><title id="system_cmd.title">System</title>
<para>Print the value that a system file maps via the current catalog</para>

<para>Shortcut name : sys</para>

<para>Usage</para><itemizedlist><listitem><para>system "&lt;SystemID&gt;"</para></listitem></itemizedlist>
</section><section id="templates_cmd"><title id="templates_cmd.title">Templates</title>
<para>Print a list of available templates. Search for a template</para>

<para>Shortcut name: t</para>

<para>Usage</para><itemizedlist><listitem><para>templates</para></listitem><listitem><para>templates &lt;TEMPLATE&gt;<emphasis>(Print details of templates matching &lt;TEMPLATE&gt; if it can be found)</emphasis></para></listitem><listitem><para>templates -q [&lt;TEMPLATE&gt;]<emphasis>(Print brief details of templates. If &lt;TEMPLATE&gt; argument is provided look for templates matching &lt;TEMPLATE&gt;)</emphasis></para></listitem></itemizedlist>
</section><section id="trace_cmd"><title id="trace_cmd.title">Trace</title>
<para>Trace one execution of the stylesheet</para>
<para>Usage</para><itemizedlist><listitem><para>trace</para></listitem></itemizedlist>
</section><section id="tty_cmd"><title id="tty_cmd.title">Tty</title>
<para>Open a terminal. Set the level of tty redirection.</para>
<para>Usage</para><itemizedlist><listitem><para>tty &lt;DEVICE_PATH&gt;<emphasis>(Where  &lt;DEVICE_PATH&gt; is a valid terminal on the operating system. Just tries to open the terminal</emphasis></para></listitem><listitem><para>tty &lt;TTY_LEVEL&gt;<emphasis>(Set the level of tty redirection, where &lt;TTY_LEVEL&gt; is a valid level of input/output to use)</emphasis><itemizedlist><listitem><para>Where level is </para></listitem><listitem><para>0 = Default input/output </para></listitem><listitem><para>1 = Terminal output of results of transformation, tracing and walking <emphasis>(Default state when tty device has been opened. Not fully implemented yet.)</emphasis></para></listitem><listitem><para>2 = Full redirection to terminal<emphasis>(Not implemented yet.)</emphasis></para></listitem><listitem><para>All other integer values are assumed to mean level 0
</para></listitem></itemizedlist></para></listitem></itemizedlist>
</section><section id="validate_cmd"><title id="validate_cmd.title">Validate</title>
<para>Validate the output file generated by stylesheet    (Disabled)</para>
<para>Usage</para><itemizedlist><listitem><para>validate</para></listitem></itemizedlist>
</section><section id="walk_cmd"><title id="walk_cmd.title">Walk</title>
<para>Walk through code using a range of speeds</para>
<para>Usage</para><itemizedlist><listitem><para>walk &lt;SPEED&gt;<emphasis>(Use Ctrl-c to stop execution, &lt;SPEED&gt; is a value between 0 and 9. Where 0 means stop, 1 is very fast, 9 is very slow)</emphasis></para></listitem></itemizedlist>
</section><section id="where_cmd"><title id="where_cmd.title">Where</title>
<para>Print a trace of templates calls (frame stack) and print the working directory.</para>

<para>Shortcut name: w</para>

<para>Usage</para><itemizedlist><listitem><para>where</para></listitem></itemizedlist>
</section><section id="write_cmd"><title id="write_cmd.title">Write</title>
<para>To be completed</para>
<para>Usage</para><itemizedlist><listitem><para>write</para></listitem></itemizedlist>
</section></chapter><chapter id="credits_chapter"><title>Credits and Licence</title><section><title>Licence</title>&underFDL;&underGPL;</section><section id="thanks"><title>Thanks to </title><para> The writers the libxml2, libxslt and libexslt.</para></section></chapter></book>